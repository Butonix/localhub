# image: docker
image:
  name: docker/compose:1.24.1
  entrypoint: [""]

stages:
  - build
  - test
  - deploy

services:
  - docker:stable-dind

cache:
  key: ${CI_COMMIT_REF_SLUG}

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DATABASE_URL: postgres://postgres@postgres:5432/postgres
  SECRET_KEY: ${SECRET_KEY}
  AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
  AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
  HEROKU_APP_NAME: ${HEROKU_APP_NAME}
  HEROKU_API_KEY: ${HEROKU_API_KEY}

.docker_config:
  before_script:
    # - apk add --update py-pip gcc python-dev build-base libffi-dev openssl-dev libgcc
    # - pip install docker-compose
    - docker-compose version
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.gitlab.com
    - docker info

build:
  extends: .docker_config
  stage: build
  script:
    - docker-compose -f docker-compose.deploy.yml build
    - docker-compose -f docker-compose.deploy.yml push
  only:
    - master

test:django:
  extends: .docker_config
  stage: test
  script:
    - docker-compose -f docker-compose.deploy.yml pull
    - docker-compose -f docker-compose.deploy.yml run django ./manage.py validate_templates
    # -W ignore due to deprecation warnings in django-countries
    # https://github.com/SmileyChris/django-countries/issues/290
    - docker-compose -f docker-compose.deploy.yml run django pytest -v -W ignore
  only:
    - master

deploy:assets:
  extends: .docker_config
  stage: deploy
  artifacts:
    paths:
      - assets
  script:
    - docker-compose -f docker-compose.deploy.yml pull
    - docker-compose -f docker-compose.deploy.yml run webpack npm run build
    - docker-compose -f docker-compose.deploy.yml run -e DJANGO_CONFIGURATION=Production -e DATABASE_URL=${DATABASE_URL} -e DJANGO_SECRET_KEY=${SECRET_KEY} -e DJANGO_AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} -e DJANGO_AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} -e DJANGO_AWS_STORAGE_BUCKET_NAME=${AWS_BUCKET_NAME} django ./manage.py collectstatic --noinput
  only:
    - master

deploy:heroku:
  image: node:11
  stage: deploy
  script:
    - apt-get update -qy
    - apt-get install -y rubygems
    - gem install dpl
    - dpl --provider=heroku --app=${HEROKU_APP_NAME} --api-key=${HEROKU_API_KEY} --skip-cleanup
  only:
    - master
