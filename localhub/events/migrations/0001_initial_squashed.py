# Generated by Django 3.0.5 on 2020-04-22 22:38

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import django_countries.fields
import model_utils.fields
import simple_history.models
import taggit.managers
import timezone_field.fields

import localhub.hashtags.fields
import localhub.markdown.fields
import localhub.users.fields

# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# localhub.events.migrations.0017_auto_20191121_1752


class Migration(migrations.Migration):

    replaces = [
        ("events", "0001_initial"),
        ("events", "0002_auto_20190705_1857"),
        ("events", "0003_auto_20190707_0900"),
        ("events", "0004_event_timezone"),
        ("events", "0005_auto_20190707_1945"),
        ("events", "0006_event_editor"),
        ("events", "0007_remove_event_editor"),
        ("events", "0008_historicalevent"),
        ("events", "0009_auto_20190720_1756"),
        ("events", "0010_auto_20190727_0918"),
        ("events", "0011_auto_20190729_2118"),
        ("events", "0012_auto_20190801_0645"),
        ("events", "0013_auto_20190801_0717"),
        ("events", "0014_auto_20190812_0720"),
        ("events", "0015_auto_20191107_1651"),
        ("events", "0016_auto_20191121_1540"),
        ("events", "0017_auto_20191121_1752"),
        ("events", "0018_auto_20200221_2242"),
        ("events", "0019_auto_20200225_1426"),
        ("events", "0020_auto_20200306_1026"),
        ("events", "0021_auto_20200317_2242"),
        ("events", "0022_auto_20200318_2200"),
        ("events", "0023_auto_20200407_2251"),
        ("events", "0024_event_attendees"),
        ("events", "0025_auto_20200414_1204"),
        ("events", "0026_auto_20200414_1504"),
        ("events", "0027_auto_20200419_1330"),
        ("events", "0028_auto_20200419_1419"),
        ("events", "0029_auto_20200419_1436"),
        ("events", "0030_auto_20200419_2018"),
        ("events", "0031_auto_20200422_1856"),
        ("events", "0032_delete_historicalevent"),
    ]

    initial = True

    dependencies = [
        ("communities", "0007_community_content_warning_tags"),
        ("communities", "0004_auto_20190602_1838"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("taggit", "0003_taggeditem_add_unique_index"),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("description", localhub.markdown.fields.MarkdownField(blank=True)),
                (
                    "search_document",
                    django.contrib.postgres.search.SearchVectorField(
                        editable=False, null=True
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("url", models.URLField(blank=True, null=True, verbose_name="Link")),
                ("starts", models.DateTimeField()),
                ("ends", models.DateTimeField(blank=True, null=True)),
                ("venue", models.CharField(blank=True, max_length=200)),
                ("street_address", models.CharField(blank=True, max_length=200)),
                (
                    "locality",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="City or town"
                    ),
                ),
                ("postal_code", models.CharField(blank=True, max_length=20)),
                ("region", models.CharField(blank=True, max_length=200)),
                (
                    "country",
                    django_countries.fields.CountryField(
                        blank=True, max_length=2, null=True
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="communities.Community",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.AddIndex(
            model_name="event",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["search_document"], name="events_even_search__232c1d_gin"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["owner", "community"], name="events_even_owner_i_ccb78f_idx"
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="ticket_price",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="event",
            name="ticket_vendor",
            field=models.TextField(blank=True, verbose_name="Tickets available from"),
        ),
        migrations.AddField(
            model_name="event",
            name="timezone",
            field=timezone_field.fields.TimeZoneField(default="UTC"),
        ),
        migrations.AlterField(
            model_name="event",
            name="starts",
            field=models.DateTimeField(verbose_name="Starts on (UTC)"),
        ),
        migrations.AddField(
            model_name="event",
            name="editor",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="allow_comments",
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name="event",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="reshares",
                to="events.Event",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="is_reshare",
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name="HistoricalEvent",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("description", localhub.markdown.fields.MarkdownField(blank=True)),
                (
                    "search_document",
                    django.contrib.postgres.search.SearchVectorField(
                        editable=False, null=True
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("url", models.URLField(blank=True, null=True, verbose_name="Link")),
                ("starts", models.DateTimeField(verbose_name="Starts on (UTC)")),
                ("ends", models.DateTimeField(blank=True, null=True)),
                ("timezone", timezone_field.fields.TimeZoneField(default="UTC")),
                ("venue", models.CharField(blank=True, max_length=200)),
                ("street_address", models.CharField(blank=True, max_length=200)),
                (
                    "locality",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="City or town"
                    ),
                ),
                ("postal_code", models.CharField(blank=True, max_length=20)),
                ("region", models.CharField(blank=True, max_length=200)),
                (
                    "country",
                    django_countries.fields.CountryField(
                        blank=True, max_length=2, null=True
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("ticket_price", models.CharField(blank=True, max_length=200)),
                (
                    "ticket_vendor",
                    models.TextField(blank=True, verbose_name="Tickets available from"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "community",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="communities.Community",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "editor",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("allow_comments", models.BooleanField(default=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="events.Event",
                    ),
                ),
                ("is_reshare", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "historical event",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.RemoveIndex(
            model_name="event", name="events_even_owner_i_ccb78f_idx",
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["created", "-created"], name="events_even_created_39a842_idx"
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="url",
            field=models.URLField(
                blank=True, max_length=500, null=True, verbose_name="Link"
            ),
        ),
        migrations.AlterField(
            model_name="historicalevent",
            name="url",
            field=models.URLField(
                blank=True, max_length=500, null=True, verbose_name="Link"
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="published",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="historicalevent",
            name="published",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["published", "-published"],
                name="events_even_publish_f23ed6_idx",
            ),
        ),
        # migrations.RunPython(
        # code=localhub.events.migrations.0017_auto_20191121_1752.set_default_published,
        # ),
        migrations.AddField(
            model_name="event",
            name="edited",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="historicalevent",
            name="edited",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="event", name="title", field=models.CharField(max_length=300),
        ),
        migrations.AlterField(
            model_name="historicalevent",
            name="title",
            field=models.CharField(max_length=300),
        ),
        migrations.AddField(
            model_name="event",
            name="is_pinned",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="historicalevent",
            name="is_pinned",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="event",
            name="deleted",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="historicalevent",
            name="deleted",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="event",
            name="attendees",
            field=models.ManyToManyField(
                blank=True, related_name="attending_events", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="canceled",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="historicalevent",
            name="canceled",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="event",
            name="contact_email",
            field=models.EmailField(blank=True, max_length=254),
        ),
        migrations.AddField(
            model_name="event",
            name="contact_name",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="event",
            name="contact_phone",
            field=models.CharField(blank=True, max_length=30),
        ),
        migrations.AddField(
            model_name="historicalevent",
            name="contact_email",
            field=models.EmailField(blank=True, max_length=254),
        ),
        migrations.AddField(
            model_name="historicalevent",
            name="contact_name",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="historicalevent",
            name="contact_phone",
            field=models.CharField(blank=True, max_length=30),
        ),
        migrations.AddField(
            model_name="event",
            name="additional_tags",
            field=localhub.hashtags.fields.HashtagsField(blank=True, max_length=300),
        ),
        migrations.AddField(
            model_name="historicalevent",
            name="additional_tags",
            field=localhub.hashtags.fields.HashtagsField(blank=True, max_length=300),
        ),
        migrations.AddField(
            model_name="event",
            name="mentions",
            field=localhub.users.fields.MentionsField(blank=True, max_length=300),
        ),
        migrations.AddField(
            model_name="historicalevent",
            name="mentions",
            field=localhub.users.fields.MentionsField(blank=True, max_length=300),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["starts"], name="event_starts_idx"),
        ),
        migrations.RenameField(
            model_name="event", old_name="additional_tags", new_name="hashtags",
        ),
        migrations.RenameField(
            model_name="historicalevent",
            old_name="additional_tags",
            new_name="hashtags",
        ),
        migrations.DeleteModel(name="HistoricalEvent",),
    ]
