# Generated by Django 3.0.5 on 2020-04-22 22:29

import django.contrib.auth.validators
import django.contrib.postgres.fields
import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import sorl.thumbnail.fields
import timezone_field.fields

import localhub.db.fields
import localhub.markdown.fields
import localhub.users.models


class Migration(migrations.Migration):

    replaces = [
        ("users", "0001_initial"),
        ("users", "0002_auto_20190530_1027"),
        ("users", "0003_user_avatar"),
        ("users", "0004_user_bio"),
        ("users", "0005_auto_20190615_1532"),
        ("users", "0006_auto_20190709_2059"),
        ("users", "0007_user_email_notifications"),
        ("users", "0008_auto_20190720_2236"),
        ("users", "0009_auto_20190720_2253"),
        ("users", "0010_auto_20190720_2310"),
        ("users", "0011_auto_20190720_2313"),
        ("users", "0012_auto_20190721_0721"),
        ("users", "0013_auto_20190721_0804"),
        ("users", "0014_auto_20190721_1036"),
        ("users", "0015_auto_20190721_1729"),
        ("users", "0016_auto_20190721_1747"),
        ("users", "0017_auto_20190724_2227"),
        ("users", "0018_auto_20190729_2118"),
        ("users", "0019_auto_20190730_2023"),
        ("users", "0020_auto_20190731_1751"),
        ("users", "0021_auto_20190801_1157"),
        ("users", "0022_auto_20190803_1400"),
        ("users", "0023_auto_20190803_1611"),
        ("users", "0024_auto_20190804_1324"),
        ("users", "0025_user_show_embedded_content"),
        ("users", "0026_user_language"),
        ("users", "0027_auto_20190812_0720"),
        ("users", "0028_auto_20190815_0842"),
        ("users", "0029_auto_20190816_1255"),
        ("users", "0030_auto_20190825_1712"),
        ("users", "0031_auto_20190830_1223"),
        ("users", "0032_user_default_timezone"),
        ("users", "0033_auto_20200107_1102"),
        ("users", "0034_auto_20200115_2246"),
        ("users", "0035_auto_20200305_1456"),
        ("users", "0036_auto_20200306_1700"),
        ("users", "0037_auto_20200308_2315"),
        ("users", "0038_auto_20200308_2317"),
        ("users", "0039_auto_20200308_2334"),
        ("users", "0040_auto_20200309_1953"),
        ("users", "0041_auto_20200309_2039"),
        ("users", "0042_auto_20200310_0823"),
        ("users", "0043_user_show_external_images"),
        ("users", "0044_historicaluser"),
        ("users", "0045_auto_20200405_2202"),
        ("users", "0046_delete_historicaluser"),
    ]

    initial = True

    dependencies = [
        ("taggit", "0003_taggeditem_add_unique_index"),
        ("auth", "0011_update_proxy_permissions"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Full name of user"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.AlterModelManagers(
            name="user", managers=[("objects", localhub.users.models.UserManager()),],
        ),
        migrations.AddField(
            model_name="user",
            name="avatar",
            field=sorl.thumbnail.fields.ImageField(
                blank=True, null=True, upload_to="avatars"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="bio",
            field=localhub.markdown.fields.MarkdownField(blank=True),
        ),
        migrations.AlterModelManagers(name="user", managers=[],),
        migrations.AlterField(
            model_name="user",
            name="name",
            field=models.CharField(
                blank=True, max_length=255, verbose_name="Full name"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="email_preferences",
            field=localhub.db.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        ("new_message", "I receive a direct message"),
                        ("new_follower", "Someone starts following me"),
                        ("new_comment", "Someone comments on my post"),
                        ("reshare", "Someone has reshared my post"),
                        ("mention", "I am @mentioned in a post or comment"),
                        ("moderator_delete", "A moderator deletes my post or comment"),
                        ("moderator_edit", "A moderator edits my post or comment"),
                        ("like", "Someone likes my post or comment"),
                        (
                            "new_followed_user_post",
                            "Someone I'm following creates a post",
                        ),
                        (
                            "new_followed_tag_post",
                            "A post is created containing tags I'm following",
                        ),
                        (
                            "flag",
                            "A user has flagged a comment or post (moderators only)",
                        ),
                        (
                            "moderator_review_request",
                            "A user has a new comment or post for you to review (moderators only)",
                        ),
                    ],
                    max_length=30,
                ),
                blank=True,
                default=list,
                size=None,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="blocked",
            field=models.ManyToManyField(
                blank=True, related_name="_user_blocked_+", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="following",
            field=models.ManyToManyField(
                blank=True,
                related_name="_user_following_+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="following_tags",
            field=models.ManyToManyField(
                blank=True, related_name="_user_following_tags_+", to="taggit.Tag"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="blocked_tags",
            field=models.ManyToManyField(
                blank=True, related_name="_user_blocked_tags_+", to="taggit.Tag"
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="blocked",
            field=models.ManyToManyField(
                blank=True, related_name="blockers", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="following",
            field=models.ManyToManyField(
                blank=True, related_name="followers", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="home_page_filters",
            field=localhub.db.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        ("users", "Posts from people I'm following"),
                        ("tags", "Posts containing tags I'm following"),
                    ],
                    max_length=12,
                ),
                blank=True,
                default=list,
                size=None,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="show_sensitive_content",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="user",
            name="search_document",
            field=django.contrib.postgres.search.SearchVectorField(
                editable=False, null=True
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["search_document"], name="users_user_search__568be7_gin"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="show_embedded_content",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="user",
            name="language",
            field=models.CharField(
                choices=[("en", "English"), ("fi", "Suomi")],
                default="en",
                help_text="Preferred language. User content will not be translated.",
                max_length=6,
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["name", "username", "email"], name="users_user_name_211263_idx"
            ),
        ),
        migrations.AlterField(
            model_name="user", name="bio", field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="user",
            name="default_timezone",
            field=timezone_field.fields.TimeZoneField(default="UTC"),
        ),
        migrations.RenameField(
            model_name="user",
            old_name="email_preferences",
            new_name="notification_preferences",
        ),
        migrations.AlterField(
            model_name="user",
            name="bio",
            field=localhub.markdown.fields.MarkdownField(blank=True),
        ),
        migrations.RenameField(
            model_name="user",
            old_name="home_page_filters",
            new_name="activity_stream_filters",
        ),
        migrations.AlterField(
            model_name="user",
            name="activity_stream_filters",
            field=localhub.db.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        (
                            "users",
                            "Posts, events and photots from people I'm following",
                        ),
                        (
                            "tags",
                            "Posts, events and photos containing tags I'm following",
                        ),
                    ],
                    max_length=12,
                ),
                blank=True,
                default=list,
                size=None,
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="activity_stream_filters",
            field=localhub.db.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        (
                            "users",
                            "Posts, events and photots from people I'm following",
                        ),
                        (
                            "tags",
                            "Posts, events and photos containing tags I'm following",
                        ),
                    ],
                    max_length=12,
                ),
                blank=True,
                default=list,
                size=None,
                verbose_name="Stream Filters",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="activity_stream_filters",
            field=localhub.db.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        ("users", "Limited to just content from people I'm following"),
                        ("tags", "Limited to just tags I'm following"),
                    ],
                    max_length=12,
                ),
                blank=True,
                default=list,
                size=None,
                verbose_name="Stream Filters",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="activity_stream_filters",
            field=localhub.db.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        ("users", "Limited to just content from people I'm following"),
                        ("tags", "Limited to just tags I'm following"),
                    ],
                    max_length=12,
                ),
                blank=True,
                default=list,
                size=None,
                verbose_name="Activity Stream Filters",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="activity_stream_filters",
            field=localhub.db.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        (
                            "users",
                            "Limited to only content posted by people I'm following",
                        ),
                        (
                            "tags",
                            "Limited to only content containing tags I'm following",
                        ),
                    ],
                    max_length=12,
                ),
                blank=True,
                default=list,
                size=None,
                verbose_name="Activity Stream Filters",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="activity_stream_filters",
            field=localhub.db.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        ("users", "Limited to only content from people I'm following"),
                        ("tags", "Limited to only tags I'm following"),
                    ],
                    max_length=12,
                ),
                blank=True,
                default=list,
                size=None,
                verbose_name="Activity Stream Filters",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="activity_stream_filters",
            field=localhub.db.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        ("users", "Limited to only content from people I'm following"),
                        ("tags", "Limited to only tags I'm following"),
                    ],
                    max_length=12,
                ),
                blank=True,
                default=list,
                size=None,
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="language",
            field=models.CharField(
                choices=[("en", "English"), ("fi", "Suomi")], default="en", max_length=6
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="send_email_notifications",
            field=models.BooleanField(default=True),
        ),
        migrations.RemoveField(model_name="user", name="notification_preferences",),
        migrations.AddField(
            model_name="user",
            name="show_external_images",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="user",
            name="dismissed_notices",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=30), default=list, size=None
            ),
        ),
    ]
