# Generated by Django 3.0.5 on 2020-04-23 03:12

# Django
import django.contrib.postgres.indexes
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

# Third Party Libraries
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("communities", "0002_auto_20200423_0312"),
        ("events", "0001_initial"),
        ("taggit", "0003_taggeditem_add_unique_index"),
    ]

    operations = [
        migrations.AddField(
            model_name="event",
            name="attendees",
            field=models.ManyToManyField(
                blank=True, related_name="attending_events", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="community",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="communities.Community"
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="editor",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="reshares",
                to="events.Event",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["search_document"], name="events_even_search__232c1d_gin"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["created", "-created"], name="events_even_created_39a842_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["published", "-published"],
                name="events_even_publish_f23ed6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["starts"], name="event_starts_idx"),
        ),
    ]
